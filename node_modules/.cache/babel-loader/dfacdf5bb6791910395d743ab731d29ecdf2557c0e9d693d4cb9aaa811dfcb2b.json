{"ast":null,"code":"import _objectSpread from\"/root/PetPulse-Ai/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useCallback}from'react';import{authService}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));const checkAuth=useCallback(async()=>{const storedToken=localStorage.getItem('token');if(!storedToken){setLoading(false);return;}try{setToken(storedToken);const response=await authService.getCurrentUser();setUser(response.data);}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');setToken(null);}finally{setLoading(false);}},[]);const login=useCallback(async(userData,authToken)=>{localStorage.setItem('token',authToken);setToken(authToken);setUser(userData);},[]);const logout=useCallback(()=>{localStorage.removeItem('token');setToken(null);setUser(null);},[]);const updateUser=useCallback(userData=>{setUser(prevUser=>_objectSpread(_objectSpread({},prevUser),userData));},[]);const value={user,token,loading,login,logout,checkAuth,updateUser,isAuthenticated:!!user&&!!token};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
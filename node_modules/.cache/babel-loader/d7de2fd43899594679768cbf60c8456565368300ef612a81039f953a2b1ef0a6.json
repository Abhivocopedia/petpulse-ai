{"ast":null,"code":"import _objectSpread from\"/root/PetPulse-Ai/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';// MUST point to VULTR backend - Production URL\nconst API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://65.20.87.234:5000/api';// Create axios instance with enhanced configuration\nconst api=axios.create({baseURL:API_BASE_URL,timeout:15000,// 15 seconds timeout\nheaders:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{var _config$method;const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}// Add timestamp to avoid caching issues\nif(config.method==='get'){config.params=_objectSpread(_objectSpread({},config.params),{},{_t:Date.now()});}console.log(\"\\uD83D\\uDD04 API Call: \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url));return config;},error=>{console.error('ðŸš¨ API Request Error:',error);return Promise.reject(error);});// Response interceptor to handle errors globally\napi.interceptors.response.use(response=>{var _response$config$meth;console.log(\"\\u2705 API Success: \".concat((_response$config$meth=response.config.method)===null||_response$config$meth===void 0?void 0:_response$config$meth.toUpperCase(),\" \").concat(response.config.url));return response;},error=>{var _error$config,_error$config2,_error$response,_error$response2,_error$response2$data,_error$response3,_error$response4;console.error('ðŸš¨ API Response Error:',{url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,method:(_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.method,status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message});// Handle specific error cases\nif(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401){localStorage.removeItem('token');window.location.href='/login';}if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===500){console.error('ðŸš¨ Server Error - Backend might be down');}if(error.code==='NETWORK_ERROR'||error.code==='ECONNREFUSED'){console.error('ðŸš¨ Network Error - Cannot connect to backend');}return Promise.reject(error);});// Health check endpoint\nexport const healthCheck=()=>api.get('/health');// Auth API\nexport const authService={register:userData=>api.post('/auth/register',userData),login:credentials=>api.post('/auth/login',credentials),getCurrentUser:()=>api.get('/auth/me'),updateProfile:profileData=>api.put('/auth/profile',profileData)};// Pets API\nexport const petsService={getAll:()=>api.get('/pets'),getById:id=>api.get(\"/pets/\".concat(id)),create:petData=>api.post('/pets',petData),update:(id,petData)=>api.put(\"/pets/\".concat(id),petData),delete:id=>api.delete(\"/pets/\".concat(id)),getBreeds:species=>api.get(\"/pets/breeds/\".concat(species))};// Vaccinations API\nexport const vaccinationsService={getAll:()=>api.get('/vaccinations'),getByPet:petId=>api.get(\"/vaccinations/pet/\".concat(petId)),create:vaccinationData=>api.post('/vaccinations',vaccinationData),complete:(id,data)=>api.put(\"/vaccinations/\".concat(id,\"/complete\"),data),generateSchedule:petId=>api.post('/vaccinations/generate-schedule',{petId})};// Health API\nexport const healthService={getRecords:()=>api.get('/health/records'),getPetRecords:petId=>api.get(\"/health/records/pet/\".concat(petId)),symptomCheck:data=>api.post('/health/symptom-checker',data),behaviorSolve:data=>api.post('/health/behavior-solver',data)};// Status API\nexport const statusService={getStatus:()=>api.get('/status')};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}